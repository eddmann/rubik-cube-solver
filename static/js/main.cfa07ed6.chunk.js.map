{"version":3,"sources":["constants.ts","App/App.module.scss","App/index.tsx","App/CameraControls.tsx","App/Actions.tsx","App/SolutionExplorer.tsx","Cube/Facelet.tsx","Cube/Cubie.tsx","Cube/rotation.ts","Cube/index.tsx","index.tsx"],"names":["CUBE_FACELET_COLOURS","W","O","G","R","Y","B","SOLVED_CUBE","CUBIE_POSITIONS","DLB","position","Vector3","facelets","DLF","ULB","ULF","DRB","DRF","URB","URF","UR","undefined","UF","UL","UB","DR","DF","DL","DB","FR","FL","BL","BR","U","D","L","F","module","exports","App","solver","cubeRef","useRef","useState","state","setState","solution","setSolution","solutionIdx","setSolutionIdx","isAutoPlay","setAutoPlay","useEffect","current","move","startState","endState","isActiveAnimation","rotate","then","length","reset","onStateChange","onRandom","rand_cube","onSolve","solve_cube","Promise","resolve","map","idx","apply_cube_moves","slice","error","reject","doSolve","catch","global","alert","onCreated","gl","toneMapping","NoToneMapping","className","styles","Canvas","camera","antialias","ref","onMoveSelection","onAutoPlay","extend","OrbitControls","CameraControls","useThree","controls","useFrame","update","args","domElement","enableDamping","dampingFactor","enableZoom","enableKeys","enablePan","minDistance","maxDistance","Actions","unknownColours","RegExp","Object","keys","join","size","type","value","match","onChange","e","target","toUpperCase","replace","onClick","SolutionExplorer","Solution","MoveActive","Move","checked","eps","Facelet","width","height","radius","axis","inverse","colour","meshRef","geometryRef","shape","useMemo","radius0","Shape","absarc","Math","PI","createShape","rotX","rotY","calcPosition","React","useLayoutEffect","rotateX","rotateY","center","color","side","DoubleSide","polygonOffset","transparent","polygonOffsetFactor","polygonOffsetUnits","attach","RoundedBox","forwardRef","depth","smoothness","children","rest","params","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","geomRef","Cubie","name","yColour","xColour","zColour","userData","x","y","z","ROTATIONS","positions","animateRotation","cubies","animationSpeed","split","rotation","extra","direction","includes","quarterTurns","cubiesToRotate","filter","cubie","stepFactor","targetRotation","remaining","theta","forEach","applyAxisAngle","rotateOnAxis","Cube","cubiesRef","rotationRef","stateWithPadding","padEnd","doStep","onCompletion","copy","set","useImperativeHandle","entries","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IAAA,iHAkCaA,EAAuB,CAClCC,EAAG,UACHC,EAAG,SACHC,EAAG,QACHC,EAAG,MACHC,EAAG,SACHC,EAAG,QAiBQC,EACX,yDAEWC,EAST,CACFC,IAAK,CACHC,SAAU,IAAIC,WAAS,GAAI,GAAI,GAC/BC,SAAU,CAAC,GAAI,GAAI,KAErBC,IAAK,CACHH,SAAU,IAAIC,WAAS,GAAI,EAAG,GAC9BC,SAAU,CAAC,GAAI,GAAI,KAErBE,IAAK,CACHJ,SAAU,IAAIC,WAAS,EAAG,GAAI,GAC9BC,SAAU,CAAC,EAAG,GAAI,KAEpBG,IAAK,CAAEL,SAAU,IAAIC,WAAS,EAAG,EAAG,GAAIC,SAAU,CAAC,EAAG,GAAI,KAC1DI,IAAK,CACHN,SAAU,IAAIC,UAAQ,GAAI,GAAI,GAC9BC,SAAU,CAAC,GAAI,GAAI,KAErBK,IAAK,CAAEP,SAAU,IAAIC,UAAQ,GAAI,EAAG,GAAIC,SAAU,CAAC,GAAI,GAAI,KAC3DM,IAAK,CAAER,SAAU,IAAIC,UAAQ,EAAG,GAAI,GAAIC,SAAU,CAAC,EAAG,GAAI,KAC1DO,IAAK,CAAET,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAAIC,SAAU,CAAC,EAAG,EAAG,KACxDQ,GAAI,CACFV,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,CAAC,EAAG,QAAIS,IAEpBC,GAAI,CACFZ,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,CAAC,OAAGS,EAAW,KAE3BE,GAAI,CACFb,SAAU,IAAIC,WAAS,EAAG,EAAG,GAC7BC,SAAU,CAAC,EAAG,QAAIS,IAEpBG,GAAI,CACFd,SAAU,IAAIC,UAAQ,EAAG,GAAI,GAC7BC,SAAU,CAAC,OAAGS,EAAW,KAE3BI,GAAI,CACFf,SAAU,IAAIC,UAAQ,GAAI,EAAG,GAC7BC,SAAU,CAAC,GAAI,QAAIS,IAErBK,GAAI,CACFhB,SAAU,IAAIC,UAAQ,GAAI,EAAG,GAC7BC,SAAU,CAAC,QAAIS,EAAW,KAE5BM,GAAI,CACFjB,SAAU,IAAIC,WAAS,GAAI,EAAG,GAC9BC,SAAU,CAAC,GAAI,QAAIS,IAErBO,GAAI,CACFlB,SAAU,IAAIC,UAAQ,GAAI,GAAI,GAC9BC,SAAU,CAAC,QAAIS,EAAW,KAE5BQ,GAAI,CACFnB,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,MAACS,EAAW,GAAI,KAE5BS,GAAI,CACFpB,SAAU,IAAIC,WAAS,EAAG,EAAG,GAC7BC,SAAU,MAACS,EAAW,GAAI,KAE5BU,GAAI,CACFrB,SAAU,IAAIC,WAAS,EAAG,GAAI,GAC9BC,SAAU,MAACS,EAAW,GAAI,KAE5BW,GAAI,CACFtB,SAAU,IAAIC,UAAQ,EAAG,GAAI,GAC7BC,SAAU,MAACS,EAAW,GAAI,KAE5BY,EAAG,CACDvB,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,CAAC,OAAGS,OAAWA,IAE3Ba,EAAG,CACDxB,SAAU,IAAIC,UAAQ,GAAI,EAAG,GAC7BC,SAAU,CAAC,QAAIS,OAAWA,IAE5Bc,EAAG,CACDzB,SAAU,IAAIC,WAAS,EAAG,EAAG,GAC7BC,SAAU,MAACS,EAAW,QAAIA,IAE5BjB,EAAG,CACDM,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,MAACS,EAAW,QAAIA,IAE5Be,EAAG,CACD1B,SAAU,IAAIC,UAAQ,EAAG,EAAG,GAC5BC,SAAU,MAACS,OAAWA,EAAW,KAEnCf,EAAG,CACDI,SAAU,IAAIC,UAAQ,EAAG,GAAI,GAC7BC,SAAU,MAACS,OAAWA,EAAW,O,mBC/JrCgB,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,SAAW,sBAAsB,KAAO,kBAAkB,WAAa,0B,uJCgJtIC,IA5FH,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OACPC,EAAUC,mBAChB,EAA0BC,mBAAoBpC,KAA9C,mBAAOqC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAmB,IAAnD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,GAAKX,EAAQY,SACRP,EAASE,IACTE,EAAL,CAEA,MAAuCJ,EAASE,GAAxCM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,SAC1B,GAAID,IAAehD,IAAnB,CAEA,IAAIkD,GAAoB,EAexB,OAbAhB,EAAQY,QAAQK,OAAOJ,GAAMK,MAAK,WAC3BF,GAKLZ,EAASW,GAELR,EAAc,EAAIF,EAASc,QAC7BX,EAAeD,EAAc,IAP7BP,EAAQY,QAAQQ,WAWb,WACLJ,GAAoB,OAErB,CAACX,EAAUE,EAAaE,IA0B3B,OACE,gCACE,iCACE,qDAEF,cAAC,IAAD,CACEN,MAAOA,EACPkB,cAAejB,EACfkB,SAhCe,WACnBlB,EAASL,EAAOwB,aAChBjB,EAAY,IACZE,EAAe,IA8BXgB,QA3Bc,YAzEN,SACdzB,EACAI,GAEA,IACE,IAAME,EAAWN,EAAO0B,WAAWtB,GAEnC,OAAOuB,QAAQC,QAAR,sBACFtB,EAASuB,KACV,SAACf,EAAYgB,GAAb,MAAsC,CACpChB,OACAC,WAAYf,EAAO+B,iBACjB3B,EACAE,EAAS0B,MAAM,EAAGF,IAEpBd,SAAUhB,EAAO+B,iBACf3B,EACAE,EAAS0B,MAAM,EAAGF,EAAM,SAVzB,CAcL,CACEhB,KAAM,eACNC,WAAYhD,IACZiD,SAAUjD,QAGd,MAAOkE,GACP,OAAON,QAAQO,OAAOD,KA8CtBE,CAAQnC,EAAQI,GACbe,MAAK,SAAAb,GACJC,EAAYD,GACZG,EAAe,GACfE,GAAY,MAEbyB,OAAM,SAAAH,GACLI,EAAOC,MAAML,SAqBf,eAAC,IAAD,CACEM,UAAW,YAAY,EAATC,GACTC,YAAcC,iBAEnBC,UAAWC,IAAOC,OAClBC,OAAQ,CAAE5E,SAAU,CAAC,EAAG,EAAG,IAC3BsE,GAAI,CAAEO,WAAW,GANnB,UAQE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,IAAK/C,EAASG,MAAOA,OAE7B,cAAC,IAAD,CACEE,SAAUA,EACVE,YAAaA,EACbE,WAAYA,EACZuC,gBAhCsB,SAACnB,GAC3B,IAAQf,EAAeT,EAASwB,GAAxBf,WACRV,EAASU,GACTN,EAAeqB,IA8BXoB,WAAYvC,U,kDC3IpB,kCASAwC,YAAO,CAAEC,oBAkCMC,IArBQ,WACrB,MAAuBC,cAAfR,EAAR,EAAQA,OAAQN,EAAhB,EAAgBA,GAEVe,EAAWrD,mBAGjB,OAFAsD,aAAS,kCAAMD,EAAS1C,eAAf,aAAM,EAAkB4C,YAG/B,+BACET,IAAKO,EACLG,KAAM,CAACZ,EAAQN,EAAGmB,YAClBC,eAAe,EACfC,cAAe,IACfC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,YAAa,EACbC,YAAa,M,gCCtCnB,yCAyCeC,IA9BC,SAAC,GAKI,IAJnB/D,EAIkB,EAJlBA,MACAkB,EAGkB,EAHlBA,cACAC,EAEkB,EAFlBA,SACAE,EACkB,EADlBA,QAEM2C,EAAiB,IAAIC,OAAJ,YAChBC,OAAOC,KAAK/G,KAAsBgH,KAAK,IADvB,KAErB,KAGF,OACE,sBAAK7B,UAAWC,IAAOuB,QAAvB,UACE,uBACEM,KAAM,GACNC,KAAK,OACLC,OAAQvE,EAAMwE,MAAM,YAAc,IAAIJ,KAAK,KAC3CK,SAAU,SAAAC,GAAC,OACTxD,EACEwD,EAAEC,OAAOJ,MAAMK,cAAcC,QAAQb,EAAgB,QAI3D,uBACA,wBAAQc,QAAS3D,EAAjB,oBACA,wBAAQ2D,QAASzD,EAAjB,wB,gCCpCN,iCAgDe0D,IApCU,SAAC,GAMI,IAL5B7E,EAK2B,EAL3BA,SACAE,EAI2B,EAJ3BA,YACAE,EAG2B,EAH3BA,WACAuC,EAE2B,EAF3BA,gBACAC,EAC2B,EAD3BA,WAEA,OAAwB,IAApB5C,EAASc,OACJ,KAIP,sBAAKuB,UAAWC,IAAOwC,SAAvB,UACG9E,EAASuB,KAAI,WAAWC,GAAX,IAAGhB,EAAH,EAAGA,KAAH,OACZ,sBAEE6B,UACEnC,IAAgBsB,EAAMc,IAAOyC,WAAazC,IAAO0C,KAEnDJ,QAAS,kBAAMjC,EAAgBnB,IALjC,SAOGhB,GANIgB,MAST,kCACE,uBACE4C,KAAK,WACLG,SAAU,kBAAM3B,GAAYxC,IAC5B6E,QAAS7E,IAJb,oB,iGCjCA8E,EAAM,KAgHGC,EA3CC,SAAC,GAOI,IAAD,IANlBC,aAMkB,MANV,IAMU,MALlBC,cAKkB,MALT,IAKS,MAJlBC,cAIkB,MAJT,EAIS,EAHlBC,EAGkB,EAHlBA,KACAC,EAEkB,EAFlBA,QACAC,EACkB,EADlBA,OAEMC,EAAU9F,mBACV+F,EAAc/F,mBAEdgG,EAAQC,mBAAQ,kBA9EJ,SAClBT,EACAC,EACAS,GAEA,IAAMF,EAAQ,IAAIG,QACZT,EAASQ,EAAUZ,EAqBzB,OAnBAU,EAAMI,OAAOd,EAAKA,EAAKA,GAAMe,KAAKC,GAAK,GAAID,KAAKC,IAAI,GACpDN,EAAMI,OACJd,EACAG,EAAkB,EAATC,EACTJ,EACAe,KAAKC,GACLD,KAAKC,GAAK,GACV,GAEFN,EAAMI,OACJZ,EAAiB,EAATE,EACRD,EAAkB,EAATC,EACTJ,EACAe,KAAKC,GAAK,EACV,GACA,GAEFN,EAAMI,OAAOZ,EAAiB,EAATE,EAAYJ,EAAKA,EAAK,GAAIe,KAAKC,GAAK,GAAG,GAErDN,EAmDqBO,CAAYf,EAAOC,EAAQC,KAAS,CAC9DF,EACAC,EACAC,IAEF,EA1CmB,SACnBC,EACAC,GAEA,OAAQD,GACN,IAAK,IACH,MAAO,CACLa,KAAM,EACNC,MAAOb,GAAW,EAAI,IAAMS,KAAKC,GAAK,GACtCtI,SAAU,IAAIC,UAAQ2H,GAAW,GAAM,GAAK,EAAG,IAEnD,IAAK,IACH,MAAO,CACLY,MAAOZ,EAAU,GAAK,IAAMS,KAAKC,GAAK,GACtCG,KAAM,EACNzI,SAAU,IAAIC,UAAQ,EAAG2H,GAAW,GAAM,GAAK,IAEnD,IAAK,IACH,MAAO,CACLY,KAAM,EACNC,KAAMJ,KAAKC,GACXtI,SAAU,IAAIC,UAAQ,EAAG,EAAG2H,GAAW,GAAM,MAqBlBc,CAAaf,EAAMC,GAA5CY,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMzI,EAApB,EAAoBA,SAQpB,OANA2I,IAAMC,iBAAgB,WAAO,IAAD,MAC1B,UAAAd,EAAQnF,eAAR,SAAiBkG,QAAQL,GACzB,UAAAV,EAAQnF,eAAR,SAAiBmG,QAAQL,GACzB,UAAAV,EAAYpF,eAAZ,SAAqBoG,WACpB,CAACN,EAAMD,IAGR,uBAAM1D,IAAKgD,EAAS9H,SAAUA,EAA9B,UACE,mCACEgJ,MAAOnB,EACPoB,KAAMC,aACNC,eAAa,EACbC,aAAW,EACXC,qBAAsB,EACtBC,oBAAqB,IAEvB,qCACExE,IAAKiD,EACLwB,OAAO,WACP/D,KAAM,CAACwC,EAAO,S,4CCxGhBV,EAAM,KAsCNkC,EAAaC,sBACjB,WAQE3E,GACC,IAAD,IAPEU,KAOF,aAP6C,GAO7C,gCAPSgC,OAOT,MAPiB,EAOjB,SAPoBC,OAOpB,MAP6B,EAO7B,SAPgCiC,OAOhC,MAPwC,EAOxC,MANEhC,cAMF,MANW,IAMX,MALEiC,kBAKF,MALe,EAKf,EAJEC,EAIF,EAJEA,SACGC,EAGL,iBACM7B,EAAQW,IAAMV,SAClB,kBAhDc,SAClBT,EACAC,EACAS,GAEA,IAAMF,EAAQ,IAAIG,QACZT,EAASQ,EAAUZ,EAqBzB,OAnBAU,EAAMI,OAAOd,EAAKA,EAAKA,GAAMe,KAAKC,GAAK,GAAID,KAAKC,IAAI,GACpDN,EAAMI,OACJd,EACAG,EAAkB,EAATC,EACTJ,EACAe,KAAKC,GACLD,KAAKC,GAAK,GACV,GAEFN,EAAMI,OACJZ,EAAiB,EAATE,EACRD,EAAkB,EAATC,EACTJ,EACAe,KAAKC,GAAK,EACV,GACA,GAEFN,EAAMI,OAAOZ,EAAiB,EAATE,EAAYJ,EAAKA,EAAK,GAAIe,KAAKC,GAAK,GAAG,GAErDN,EAqBGO,CAAYf,EAAOC,EAAQC,KACjC,CAACF,EAAOC,EAAQC,IAEZoC,EAASnB,IAAMV,SACnB,iBAAO,CACLyB,MAAOA,EAAiB,EAAThC,EACfqC,cAAc,EACdC,cAA4B,EAAbL,EACfM,MAAO,EACPC,UAAWxC,EAASJ,EACpB6C,eAAgBzC,EAChB0C,cAAeT,KAEjB,CAACD,EAAOhC,EAAQiC,IAEZU,EAAU1B,IAAM3G,SAQtB,OANA2G,IAAMC,iBAAgB,WAChByB,EAAQ1H,SACV0H,EAAQ1H,QAAQoG,WAEjB,CAACf,EAAO8B,IAGT,+CAAMhF,IAAKA,GAAS+E,GAApB,cACE,uCACEN,OAAO,WACPzE,IAAKuF,EACL7E,KAAM,CAACwC,EAAO8B,KAEfF,SA6DMU,EA/CDb,sBACZ,WAQE3E,GACI,IAPFyF,EAOC,EAPDA,KACAvK,EAMC,EANDA,SAMC,IALDwK,eAKC,WALS7J,EAKT,MAJD8J,eAIC,WAJS9J,EAIT,MAHD+J,eAGC,WAHS/J,EAGT,EACH,OACE,eAAC,EAAD,CACEmE,IAAKA,EACLU,KAAM,CAAC,EAAG,EAAG,GACbkC,OAAQ,IACRiC,WAAY,EACZ3J,SAAUA,EACV2K,SAAU,CAAEJ,OAAMvK,YANpB,UAQE,mCAAmBgJ,MAAO,IACzBwB,GACC,cAAC,EAAD,CACE7C,KAAK,IACLC,QAAS5H,EAAS4K,EAAI,EACtB/C,OAAQ2C,IAGXC,GACC,cAAC,EAAD,CACE9C,KAAK,IACLC,QAAS5H,EAAS6K,EAAI,EACtBhD,OAAQ4C,IAGXC,GACC,cAAC,EAAD,CACE/C,KAAK,IACLC,QAAS5H,EAAS8K,EAAI,EACtBjD,OAAQ6C,UCtIdK,EAA0F,CAC9FrJ,EAAG,CAAEsJ,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,IACnGL,EAAG,CAAEoL,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,IACnGP,EAAG,CAAEsL,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,IACnGwB,EAAG,CAAEuJ,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,IACnGsB,EAAG,CAAEyJ,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,IACnGuB,EAAG,CAAEwJ,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAMrD,KAAM,IAAI1H,UAAQ,EAAG,EAAG,KA6CtFgL,EAxCS,SACtBC,EACAtI,EACAuI,GAEA,MAA0BvI,EAAKwI,MAAM,GAAI,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,EAA4BP,EAAUM,GAA9BL,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,KACf4D,EAAsB,MAAVD,EAAgB,GAAK,EACjC,CAAC,IAAK,IAAK,KAAKE,SAASH,KAAWE,GAAaA,GACrD,IAAME,EAAyB,MAAVH,EAAgB,EAAI,EACnCI,EAAiBR,EAAOS,QAAO,SAAAC,GAAK,OACxCZ,EAAUQ,SAASI,EAAMjB,SAASJ,SAE9BsB,EAAa,IAAOJ,EAAeN,EACnCW,EAAkBL,EAAepD,KAAKC,GAAM,EAC9CyD,EAAYD,EAEhB,OAAO,WACL,GAAIC,GAAa,EACf,OAAO,EAGT,IAAMC,GACH,cACG,EAAID,EAAYD,GAAkBA,EAAmB,IACzDD,EAQF,OAPAE,GAAaC,EAEbN,EAAeO,SAAQ,SAAAL,GACrBA,EAAM5L,SAASkM,eAAevE,EAAMqE,EAAQT,GAC5CK,EAAMO,aAAaxE,EAAMqE,EAAQT,OAG5B,I,QCzBLa,EAAO3C,sBAAkC,WAAY3E,GAAS,IAAlB5C,EAAiB,EAAjBA,MAC1CmK,EAAYrK,iBAAqB,IACjCsK,EACJtK,mBAKIuK,EAA8BrK,EAAMsK,OAAO,GAAI,KAErDlH,aAAS,WACP,GAAKgH,EAAY3J,QAAjB,CAEA,kBAA+B2J,EAAY3J,QAA3C,GAAO8J,EAAP,KAAeC,EAAf,KAEKD,MACHC,IACAJ,EAAY3J,aAAUhC,OAI1B,IAAMqC,EAAS,SAACJ,GAAD,OACb,IAAIa,SAAc,SAAAC,GAChB4I,EAAY3J,QAAU,CACpBsI,EAAgBoB,EAAU1J,QAASC,EAAM,GACzCc,OAIAP,EAAQ,WACZkJ,EAAU1J,QAAQsJ,SAAQ,SAAAL,GACxBA,EAAM5L,SAAS2M,KAAKf,EAAMjB,SAAS3K,UACnC4L,EAAMP,SAASuB,IAAI,EAAG,EAAG,OAQ7B,OAJAhE,0BAAgBzF,EAAO,CAACoJ,IAExBM,8BAAoB/H,GAAK,iBAAO,CAAE3B,QAAOH,aAGvC,uBAAO8B,IAAKA,EAAZ,SACGsB,OAAO0G,QAAQhN,KAAiB6D,KAC/B,WAAiCC,GAAS,IAAD,mBAAvC2G,EAAuC,YAA/BvK,EAA+B,EAA/BA,SACR,EADuC,EAArBE,SAC2ByD,KAAI,SAAAC,GAAG,YAC1CjD,IAARiD,EACItE,IACEiN,EAAiB3I,SAEnBjD,KALN,mBAAO8J,EAAP,KAAgBD,EAAhB,KAAyBE,EAAzB,KAQA,OACE,cAAC,EAAD,CAEE5F,IAAK,SAAAiI,GAAE,OAAKV,EAAU1J,QAAQiB,GAAOmJ,GACrCxC,KAAMA,EACNvK,SAAUA,EACVyK,QAASA,EACTD,QAASA,EACTE,QAASA,GANJH,WAeJ6B,O,gCC/Ff,mEAMA,mDAAiCnJ,MAAK,SAAAnB,GACpCkL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAKpL,OAAQA,MAEfqL,SAASC,eAAe,a","file":"static/js/main.cfa07ed6.chunk.js","sourcesContent":["import { Vector3 } from 'three';\n\nexport type CubeState = string;\n\nexport type CubeRotatation = 'F' | 'B' | 'R' | 'L' | 'U' | 'D';\n\nexport type CubePosition =\n  | 'DLB'\n  | 'DLF'\n  | 'ULB'\n  | 'ULF'\n  | 'DRB'\n  | 'DRF'\n  | 'URB'\n  | 'URF'\n  | 'UR'\n  | 'UF'\n  | 'UL'\n  | 'UB'\n  | 'DR'\n  | 'DF'\n  | 'DL'\n  | 'DB'\n  | 'FR'\n  | 'FL'\n  | 'BL'\n  | 'BR'\n  | 'U'\n  | 'D'\n  | 'R'\n  | 'L'\n  | 'F'\n  | 'B';\n\nexport const CUBE_FACELET_COLOURS = {\n  W: '#f7f5f5',\n  O: 'orange',\n  G: 'green',\n  R: 'red',\n  Y: 'yellow',\n  B: 'blue',\n};\n\nexport type CubeFaceletColour = keyof typeof CUBE_FACELET_COLOURS;\n\nexport type Move = string;\n\nexport type MoveTransition = {\n  move: Move;\n  startState: CubeState;\n  endState: CubeState;\n};\n\nexport type Solution = MoveTransition[];\n\nexport type Solver = typeof import('wasm-rubik-cube-solver');\n\nexport const SOLVED_CUBE =\n  'WWWWWWWWWRRRRRRRRRGGGGGGGGGYYYYYYYYYOOOOOOOOOBBBBBBBBB';\n\nexport const CUBIE_POSITIONS: {\n  [position in CubePosition]: {\n    position: Vector3;\n    facelets: [\n      number | undefined,\n      number | undefined,\n      number | undefined\n    ];\n  };\n} = {\n  DLB: {\n    position: new Vector3(-1, -1, -1),\n    facelets: [33, 42, 53],\n  },\n  DLF: {\n    position: new Vector3(-1, -1, 1),\n    facelets: [27, 44, 24],\n  },\n  ULB: {\n    position: new Vector3(-1, 1, -1),\n    facelets: [0, 36, 47],\n  },\n  ULF: { position: new Vector3(-1, 1, 1), facelets: [6, 38, 18] },\n  DRB: {\n    position: new Vector3(1, -1, -1),\n    facelets: [35, 17, 51],\n  },\n  DRF: { position: new Vector3(1, -1, 1), facelets: [29, 15, 26] },\n  URB: { position: new Vector3(1, 1, -1), facelets: [2, 11, 45] },\n  URF: { position: new Vector3(1, 1, 1), facelets: [8, 9, 20] },\n  UR: {\n    position: new Vector3(1, 1, 0),\n    facelets: [5, 10, undefined],\n  },\n  UF: {\n    position: new Vector3(0, 1, 1),\n    facelets: [7, undefined, 19],\n  },\n  UL: {\n    position: new Vector3(-1, 1, 0),\n    facelets: [3, 37, undefined],\n  },\n  UB: {\n    position: new Vector3(0, 1, -1),\n    facelets: [1, undefined, 46],\n  },\n  DR: {\n    position: new Vector3(1, -1, 0),\n    facelets: [32, 16, undefined],\n  },\n  DF: {\n    position: new Vector3(0, -1, 1),\n    facelets: [28, undefined, 25],\n  },\n  DL: {\n    position: new Vector3(-1, -1, 0),\n    facelets: [30, 43, undefined],\n  },\n  DB: {\n    position: new Vector3(0, -1, -1),\n    facelets: [34, undefined, 52],\n  },\n  FR: {\n    position: new Vector3(1, 0, 1),\n    facelets: [undefined, 12, 23],\n  },\n  FL: {\n    position: new Vector3(-1, 0, 1),\n    facelets: [undefined, 41, 21],\n  },\n  BL: {\n    position: new Vector3(-1, 0, -1),\n    facelets: [undefined, 39, 50],\n  },\n  BR: {\n    position: new Vector3(1, 0, -1),\n    facelets: [undefined, 14, 48],\n  },\n  U: {\n    position: new Vector3(0, 1, 0),\n    facelets: [4, undefined, undefined],\n  },\n  D: {\n    position: new Vector3(0, -1, 0),\n    facelets: [31, undefined, undefined],\n  },\n  L: {\n    position: new Vector3(-1, 0, 0),\n    facelets: [undefined, 40, undefined],\n  },\n  R: {\n    position: new Vector3(1, 0, 0),\n    facelets: [undefined, 13, undefined],\n  },\n  F: {\n    position: new Vector3(0, 0, 1),\n    facelets: [undefined, undefined, 22],\n  },\n  B: {\n    position: new Vector3(0, 0, -1),\n    facelets: [undefined, undefined, 49],\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actions\":\"App_Actions__2k3r2\",\"Canvas\":\"App_Canvas__3gPKS\",\"Solution\":\"App_Solution__2FVnF\",\"Move\":\"App_Move__3i-Yo\",\"MoveActive\":\"App_MoveActive__wA1bn\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { NoToneMapping } from 'three';\nimport CameraControls from './CameraControls';\nimport Actions from './Actions';\nimport SolutionExplorer from './SolutionExplorer';\nimport Cube from '../Cube';\nimport styles from './App.module.scss';\nimport {\n  Solver,\n  CubeState,\n  Move,\n  MoveTransition,\n  Solution,\n  SOLVED_CUBE,\n} from '../constants';\n\ntype AppProps = {\n  solver: Solver;\n};\n\nconst doSolve = (\n  solver: Solver,\n  state: CubeState\n): Promise<Solution> => {\n  try {\n    const solution = solver.solve_cube(state);\n\n    return Promise.resolve([\n      ...solution.map(\n        (move: Move, idx): MoveTransition => ({\n          move,\n          startState: solver.apply_cube_moves(\n            state,\n            solution.slice(0, idx)\n          ),\n          endState: solver.apply_cube_moves(\n            state,\n            solution.slice(0, idx + 1)\n          ),\n        })\n      ),\n      {\n        move: '🎉',\n        startState: SOLVED_CUBE,\n        endState: SOLVED_CUBE,\n      },\n    ]);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst App = ({ solver }: AppProps) => {\n  const cubeRef = useRef<any>();\n  const [state, setState] = useState<CubeState>(SOLVED_CUBE);\n  const [solution, setSolution] = useState<Solution>([]);\n  const [solutionIdx, setSolutionIdx] = useState(0);\n  const [isAutoPlay, setAutoPlay] = useState(true);\n\n  useEffect(() => {\n    if (!cubeRef.current) return;\n    if (!solution[solutionIdx]) return;\n    if (!isAutoPlay) return;\n\n    const { move, startState, endState } = solution[solutionIdx];\n    if (startState === SOLVED_CUBE) return;\n\n    let isActiveAnimation = true;\n\n    cubeRef.current.rotate(move).then(() => {\n      if (!isActiveAnimation) {\n        cubeRef.current.reset();\n        return;\n      }\n\n      setState(endState);\n\n      if (solutionIdx + 1 < solution.length) {\n        setSolutionIdx(solutionIdx + 1);\n      }\n    });\n\n    return () => {\n      isActiveAnimation = false;\n    };\n  }, [solution, solutionIdx, isAutoPlay]);\n\n  const handleRandom = () => {\n    setState(solver.rand_cube());\n    setSolution([]);\n    setSolutionIdx(0);\n  };\n\n  const handleSolve = () => {\n    doSolve(solver, state)\n      .then(solution => {\n        setSolution(solution);\n        setSolutionIdx(0);\n        setAutoPlay(true);\n      })\n      .catch(error => {\n        global.alert(error);\n      });\n  };\n\n  const handleMoveSelection = (idx: number) => {\n    const { startState } = solution[idx];\n    setState(startState);\n    setSolutionIdx(idx);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Rubik Cube Solver</h1>\n      </header>\n      <Actions\n        state={state}\n        onStateChange={setState}\n        onRandom={handleRandom}\n        onSolve={handleSolve}\n      />\n      <Canvas\n        onCreated={({ gl }) => {\n          gl.toneMapping = NoToneMapping;\n        }}\n        className={styles.Canvas}\n        camera={{ position: [4, 4, 5] }}\n        gl={{ antialias: true }}\n      >\n        <CameraControls />\n        <Cube ref={cubeRef} state={state} />\n      </Canvas>\n      <SolutionExplorer\n        solution={solution}\n        solutionIdx={solutionIdx}\n        isAutoPlay={isAutoPlay}\n        onMoveSelection={handleMoveSelection}\n        onAutoPlay={setAutoPlay}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useRef } from 'react';\nimport {\n  useFrame,\n  useThree,\n  extend,\n  ReactThreeFiber,\n} from '@react-three/fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nconst CameraControls = () => {\n  const { camera, gl } = useThree();\n\n  const controls = useRef<OrbitControls>();\n  useFrame(() => controls.current?.update());\n\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      enableDamping={true}\n      dampingFactor={0.25}\n      enableZoom={true}\n      enableKeys={false}\n      enablePan={false}\n      minDistance={5}\n      maxDistance={5}\n    />\n  );\n};\n\nexport default CameraControls;\n","import React from 'react';\nimport { CubeState, CUBE_FACELET_COLOURS } from '../constants';\nimport styles from './App.module.scss';\n\ntype ActionsProps = {\n  state: CubeState;\n  onStateChange: (state: CubeState) => void;\n  onRandom: () => void;\n  onSolve: () => void;\n};\n\nconst Actions = ({\n  state,\n  onStateChange,\n  onRandom,\n  onSolve,\n}: ActionsProps) => {\n  const unknownColours = new RegExp(\n    `[^${Object.keys(CUBE_FACELET_COLOURS).join('')}]`,\n    'g'\n  );\n\n  return (\n    <div className={styles.Actions}>\n      <input\n        size={80}\n        type=\"text\"\n        value={(state.match(/.{1,9}/g) || []).join(' ')}\n        onChange={e =>\n          onStateChange(\n            e.target.value.toUpperCase().replace(unknownColours, '')\n          )\n        }\n      />\n      <br />\n      <button onClick={onRandom}>Random</button>\n      <button onClick={onSolve}>Solve</button>\n    </div>\n  );\n};\n\nexport default Actions;\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Solution } from '../constants';\n\ntype SolutionExplorerProps = {\n  solution: Solution;\n  solutionIdx: number;\n  isAutoPlay: boolean;\n  onMoveSelection: (idx: number) => void;\n  onAutoPlay: (enabled: boolean) => void;\n};\n\nconst SolutionExplorer = ({\n  solution,\n  solutionIdx,\n  isAutoPlay,\n  onMoveSelection,\n  onAutoPlay,\n}: SolutionExplorerProps) => {\n  if (solution.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Solution}>\n      {solution.map(({ move }, idx) => (\n        <span\n          key={idx}\n          className={\n            solutionIdx === idx ? styles.MoveActive : styles.Move\n          }\n          onClick={() => onMoveSelection(idx)}\n        >\n          {move}\n        </span>\n      ))}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => onAutoPlay(!isAutoPlay)}\n          checked={isAutoPlay}\n        />\n        Auto Play\n      </label>\n    </div>\n  );\n};\n\nexport default SolutionExplorer;\n","import React, { useMemo, useRef } from 'react';\nimport { Shape, DoubleSide, Vector3 } from 'three';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n): Shape => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype FaceletAxis = 'x' | 'y' | 'z';\n\ntype FaceletProps = {\n  width?: number;\n  height?: number;\n  radius?: number;\n  axis: FaceletAxis;\n  colour: string;\n  inverse: boolean;\n};\n\nconst calcPosition = (\n  axis: FaceletAxis,\n  inverse: boolean\n): { rotX: number; rotY: number; position: Vector3 } => {\n  switch (axis) {\n    case 'y':\n      return {\n        rotX: 0,\n        rotY: (inverse ? -1 : 1) * (Math.PI / 2),\n        position: new Vector3(inverse ? -0.5 : 0.5, 0, 0),\n      };\n    case 'x':\n      return {\n        rotX: (inverse ? 1 : -1) * (Math.PI / 2),\n        rotY: 0,\n        position: new Vector3(0, inverse ? -0.5 : 0.5, 0),\n      };\n    case 'z':\n      return {\n        rotX: 0,\n        rotY: Math.PI,\n        position: new Vector3(0, 0, inverse ? -0.5 : 0.5),\n      };\n  }\n};\n\nconst Facelet = ({\n  width = 0.88,\n  height = 0.88,\n  radius = 0,\n  axis,\n  inverse,\n  colour,\n}: FaceletProps) => {\n  const meshRef = useRef<THREE.Mesh>();\n  const geometryRef = useRef<THREE.ShapeBufferGeometry>();\n\n  const shape = useMemo(() => createShape(width, height, radius), [\n    width,\n    height,\n    radius,\n  ]);\n  const { rotX, rotY, position } = calcPosition(axis, inverse);\n\n  React.useLayoutEffect(() => {\n    meshRef.current?.rotateX(rotX);\n    meshRef.current?.rotateY(rotY);\n    geometryRef.current?.center();\n  }, [rotY, rotX]);\n\n  return (\n    <mesh ref={meshRef} position={position}>\n      <meshBasicMaterial\n        color={colour}\n        side={DoubleSide}\n        polygonOffset\n        transparent\n        polygonOffsetFactor={-1}\n        polygonOffsetUnits={-4}\n      />\n      <shapeBufferGeometry\n        ref={geometryRef}\n        attach=\"geometry\"\n        args={[shape, 5]}\n      />\n    </mesh>\n  );\n};\n\nexport default Facelet;\n","import React, { forwardRef } from 'react';\nimport { Shape, ExtrudeBufferGeometry, Mesh, Vector3 } from 'three';\nimport Facelet from './Facelet';\nimport { CubePosition } from '../constants';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n) => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype RoundBoxProps = {\n  args?: [width?: number, height?: number, depth?: number];\n  radius?: number;\n  smoothness?: number;\n} & Omit<JSX.IntrinsicElements['mesh'], 'args'>;\n\nconst RoundedBox = forwardRef<Mesh, RoundBoxProps>(\n  function RoundedBox(\n    {\n      args: [width = 1, height = 1, depth = 1] = [],\n      radius = 0.05,\n      smoothness = 4,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    const shape = React.useMemo(\n      () => createShape(width, height, radius),\n      [width, height, radius]\n    );\n    const params = React.useMemo(\n      () => ({\n        depth: depth - radius * 2,\n        bevelEnabled: true,\n        bevelSegments: smoothness * 2,\n        steps: 1,\n        bevelSize: radius - eps,\n        bevelThickness: radius,\n        curveSegments: smoothness,\n      }),\n      [depth, radius, smoothness]\n    );\n    const geomRef = React.useRef<ExtrudeBufferGeometry>();\n\n    React.useLayoutEffect(() => {\n      if (geomRef.current) {\n        geomRef.current.center();\n      }\n    }, [shape, params]);\n\n    return (\n      <mesh ref={ref} {...rest}>\n        <extrudeBufferGeometry\n          attach=\"geometry\"\n          ref={geomRef}\n          args={[shape, params]}\n        />\n        {children}\n      </mesh>\n    );\n  }\n);\n\ntype CubieProps = {\n  name: CubePosition;\n  position: Vector3;\n  yColour: string | undefined;\n  xColour: string | undefined;\n  zColour: string | undefined;\n};\n\nconst Cubie = forwardRef<Mesh, CubieProps>(\n  (\n    {\n      name,\n      position,\n      yColour = undefined,\n      xColour = undefined,\n      zColour = undefined,\n    },\n    ref\n  ) => {\n    return (\n      <RoundedBox\n        ref={ref}\n        args={[1, 1, 1]}\n        radius={0.08}\n        smoothness={5}\n        position={position}\n        userData={{ name, position }}\n      >\n        <meshBasicMaterial color={0x000000} />\n        {yColour && (\n          <Facelet\n            axis=\"y\"\n            inverse={position.x < 0}\n            colour={yColour}\n          />\n        )}\n        {xColour && (\n          <Facelet\n            axis=\"x\"\n            inverse={position.y < 0}\n            colour={xColour}\n          />\n        )}\n        {zColour && (\n          <Facelet\n            axis=\"z\"\n            inverse={position.z < 0}\n            colour={zColour}\n          />\n        )}\n      </RoundedBox>\n    );\n  }\n);\n\nexport default Cubie;\n","import { Vector3 } from 'three';\nimport { CubePosition, CubeRotatation } from '../constants';\n\n// prettier-ignore\nconst ROTATIONS: { [rotation in CubeRotatation]: { positions: CubePosition[], axis: Vector3}} = {\n  F: { positions: ['ULF', 'URF', 'DLF', 'DRF', 'UF', 'DF', 'FR', 'FL', 'F'], axis: new Vector3(0, 0, 1) },\n  B: { positions: ['URB', 'ULB', 'DRB', 'DLB', 'UB', 'DB', 'BL', 'BR', 'B'], axis: new Vector3(0, 0, 1) },\n  R: { positions: ['URF', 'URB', 'DRF', 'DRB', 'UR', 'DR', 'FR', 'BR', 'R'], axis: new Vector3(1, 0, 0) },\n  L: { positions: ['ULB', 'ULF', 'DLB', 'DLF', 'UL', 'DL', 'FL', 'BL', 'L'], axis: new Vector3(1, 0, 0) },\n  U: { positions: ['ULB', 'URB', 'ULF', 'URF', 'UR', 'UF', 'UL', 'UB', 'U'], axis: new Vector3(0, 1, 0) },\n  D: { positions: ['DLF', 'DRF', 'DLB', 'DRB', 'DR', 'DF', 'DL', 'DB', 'D'], axis: new Vector3(0, 1, 0) },\n};\n\nexport type RotationAnimationStep = () => boolean;\n\nconst animateRotation = (\n  cubies: any[],\n  move: string,\n  animationSpeed: number\n): RotationAnimationStep => {\n  const [rotation, extra] = move.split('', 2) as [\n    CubeRotatation,\n    \"'\" | '2' | undefined\n  ];\n  const { positions, axis } = ROTATIONS[rotation];\n  let direction = extra === \"'\" ? 1 : -1;\n  if (['D', 'L', 'B'].includes(rotation)) direction = -direction;\n  const quarterTurns = extra === '2' ? 2 : 1;\n  const cubiesToRotate = cubies.filter(cubie =>\n    positions.includes(cubie.userData.name)\n  );\n  const stepFactor = 0.05 * quarterTurns * animationSpeed;\n  const targetRotation = (quarterTurns * Math.PI) / 2;\n  let remaining = targetRotation;\n\n  return () => {\n    if (remaining <= 0) {\n      return false;\n    }\n\n    const theta =\n      (1.1 -\n        ((2 * remaining - targetRotation) / targetRotation) ** 2) *\n      stepFactor;\n    remaining -= theta;\n\n    cubiesToRotate.forEach(cubie => {\n      cubie.position.applyAxisAngle(axis, theta * direction);\n      cubie.rotateOnAxis(axis, theta * direction);\n    });\n\n    return true;\n  };\n};\n\nexport default animateRotation;\n","import React, {\n  useRef,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport Cubie from './Cubie';\nimport animateRotation, { RotationAnimationStep } from './rotation';\nimport {\n  CubePosition,\n  CubeFaceletColour,\n  CubeState,\n  CUBIE_POSITIONS,\n  CUBE_FACELET_COLOURS,\n} from '../constants';\n\ntype CubeProps = {\n  state: CubeState;\n} & JSX.IntrinsicElements['group'];\n\ntype CubeHandle = {\n  reset: () => void;\n  rotate: (move: string) => Promise<void>;\n};\n\nconst Cube = forwardRef<CubeHandle, CubeProps>(({ state }, ref) => {\n  const cubiesRef = useRef<THREE.Mesh[]>([]);\n  const rotationRef =\n    useRef<\n      | [doStep: RotationAnimationStep, onCompletion: () => void]\n      | undefined\n    >();\n\n  const stateWithPadding: CubeState = state.padEnd(54, 'W');\n\n  useFrame(() => {\n    if (!rotationRef.current) return;\n\n    const [doStep, onCompletion] = rotationRef.current;\n\n    if (!doStep()) {\n      onCompletion();\n      rotationRef.current = undefined;\n    }\n  });\n\n  const rotate = (move: string) =>\n    new Promise<void>(resolve => {\n      rotationRef.current = [\n        animateRotation(cubiesRef.current, move, 1),\n        resolve,\n      ];\n    });\n\n  const reset = () => {\n    cubiesRef.current.forEach(cubie => {\n      cubie.position.copy(cubie.userData.position);\n      cubie.rotation.set(0, 0, 0);\n    });\n  };\n\n  useLayoutEffect(reset, [stateWithPadding]);\n\n  useImperativeHandle(ref, () => ({ reset, rotate }));\n\n  return (\n    <group ref={ref}>\n      {Object.entries(CUBIE_POSITIONS).map(\n        ([name, { position, facelets }], idx) => {\n          const [xColour, yColour, zColour] = facelets.map(idx =>\n            idx !== undefined\n              ? CUBE_FACELET_COLOURS[\n                  stateWithPadding[idx] as CubeFaceletColour\n                ]\n              : undefined\n          );\n\n          return (\n            <Cubie\n              key={name}\n              ref={el => (cubiesRef.current[idx] = el as THREE.Mesh)}\n              name={name as CubePosition}\n              position={position}\n              xColour={xColour}\n              yColour={yColour}\n              zColour={zColour}\n            />\n          );\n        }\n      )}\n    </group>\n  );\n});\n\nexport default Cube;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './new-1.1.3.css';\n\nimport('wasm-rubik-cube-solver').then(solver => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App solver={solver} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}